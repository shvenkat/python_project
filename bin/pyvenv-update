#!/bin/bash

set -e -o pipefail -u

NAME="$(basename "$0")"
REPO_DIR="$(dirname "$(dirname "$0")")"
VENV_DIR=".venv"
CHECKSUM_FILE="Pipfile_checksum.txt"

source "$(dirname "$0")/bash-utils"

# -- FUNCTIONS --

# Args: None.
update_pyvenv () {
    local venv_uptodate="false"
    local checksum_file="${VENV_DIR}/${CHECKSUM_FILE}"
    if [[ -r "$checksum_file" ]]; then
        if shasum -s -c "$checksum_file"; then
            venv_uptodate="true"
        fi
    fi
    if [[ "$venv_uptodate" == "false" ]]; then
        if [[ -d "$VENV_DIR" ]]; then
            info "Updating virtual env."
        else
            info "Creating virtual env. This may take a while. Stretch. Smile :)"
        fi
        PIPENV_VENV_IN_PROJECT=1 run pipenv install --dev
        shasum -p -a 256 Pipfile Pipfile.lock > "$checksum_file"
    fi
}

# -- MAIN --

usage () {
    echo "Usage: $NAME [<project-dir>]" 1>&2
}

# Parse arguments.
if [[ $# -eq 1 ]]; then
    if [[ "$1" == "help" ]] || [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
        usage
        exit 0
    fi
elif [[ $# -gt 1 ]]; then
    usage
    exit 1
fi

project_dir="${1:-${REPO_DIR}}"
cd "$project_dir" || { error "Directory $project_dir not found."; exit 1; }
if deactivate >/dev/null 2>&1; then
    deactivate
fi
update_pyvenv
